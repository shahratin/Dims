# Makefile.in generated by automake 1.9.6 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/stardict-tools
pkglibdir = $(libdir)/stardict-tools
pkgincludedir = $(includedir)/stardict-tools
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-redhat-linux-gnu
host_triplet = x86_64-redhat-linux-gnu
bin_PROGRAMS = stardict-editor$(EXEEXT)
noinst_PROGRAMS = pydict2dic$(EXEEXT) olddic2newdic$(EXEEXT) \
	oxford2dic$(EXEEXT) directory2dic$(EXEEXT) dictd2dic$(EXEEXT) \
	wquick2dic$(EXEEXT) ec50$(EXEEXT) directory2treedic$(EXEEXT) \
	treedict2dir$(EXEEXT) jdictionary$(EXEEXT) mova$(EXEEXT) \
	xmlinout$(EXEEXT) soothill$(EXEEXT) kanjidic2$(EXEEXT) \
	powerword$(EXEEXT) kdic$(EXEEXT) 21tech$(EXEEXT) \
	21shiji$(EXEEXT) buddhist$(EXEEXT) tabfile$(EXEEXT) \
	dsl2dict$(EXEEXT) cedict$(EXEEXT) edict$(EXEEXT) \
	duden$(EXEEXT) stardict_dict_update$(EXEEXT) degb2utf$(EXEEXT) \
	frgb2utf$(EXEEXT) jpgb2utf$(EXEEXT) gmx2utf$(EXEEXT) \
	rucn$(EXEEXT) kingsoft$(EXEEXT) wikipedia$(EXEEXT) \
	babylon$(EXEEXT) stardict2txt$(EXEEXT) \
	stardict_verify$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_21shiji_OBJECTS = 21shiji.$(OBJEXT)
21shiji_OBJECTS = $(am_21shiji_OBJECTS)
am__DEPENDENCIES_1 =
21shiji_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_21tech_OBJECTS = 21tech.$(OBJEXT)
21tech_OBJECTS = $(am_21tech_OBJECTS)
21tech_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_babylon_OBJECTS = babylon.$(OBJEXT) libbabylonfile.$(OBJEXT) \
	libcommon.$(OBJEXT)
babylon_OBJECTS = $(am_babylon_OBJECTS)
babylon_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_buddhist_OBJECTS = buddhist.$(OBJEXT)
buddhist_OBJECTS = $(am_buddhist_OBJECTS)
buddhist_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_cedict_OBJECTS = cedict.$(OBJEXT)
cedict_OBJECTS = $(am_cedict_OBJECTS)
cedict_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_degb2utf_OBJECTS = degb2utf.$(OBJEXT)
degb2utf_OBJECTS = $(am_degb2utf_OBJECTS)
degb2utf_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_dictd2dic_OBJECTS = dictd2dic.$(OBJEXT)
dictd2dic_OBJECTS = $(am_dictd2dic_OBJECTS)
dictd2dic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_directory2dic_OBJECTS = directory2dic.$(OBJEXT)
directory2dic_OBJECTS = $(am_directory2dic_OBJECTS)
directory2dic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_directory2treedic_OBJECTS = directory2treedic.$(OBJEXT)
directory2treedic_OBJECTS = $(am_directory2treedic_OBJECTS)
directory2treedic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_dsl2dict_OBJECTS = dsl2dict.$(OBJEXT)
dsl2dict_OBJECTS = $(am_dsl2dict_OBJECTS)
dsl2dict_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am_duden_OBJECTS = duden.$(OBJEXT)
duden_OBJECTS = $(am_duden_OBJECTS)
duden_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_ec50_OBJECTS = ec50.$(OBJEXT)
ec50_OBJECTS = $(am_ec50_OBJECTS)
ec50_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_edict_OBJECTS = edict.$(OBJEXT)
edict_OBJECTS = $(am_edict_OBJECTS)
edict_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_frgb2utf_OBJECTS = frgb2utf.$(OBJEXT)
frgb2utf_OBJECTS = $(am_frgb2utf_OBJECTS)
frgb2utf_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_gmx2utf_OBJECTS = gmx2utf.$(OBJEXT)
gmx2utf_OBJECTS = $(am_gmx2utf_OBJECTS)
gmx2utf_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_jdictionary_OBJECTS = jdictionary.$(OBJEXT)
jdictionary_OBJECTS = $(am_jdictionary_OBJECTS)
jdictionary_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_jpgb2utf_OBJECTS = jpgb2utf.$(OBJEXT)
jpgb2utf_OBJECTS = $(am_jpgb2utf_OBJECTS)
jpgb2utf_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kanjidic2_OBJECTS = kanjidic2.$(OBJEXT)
kanjidic2_OBJECTS = $(am_kanjidic2_OBJECTS)
kanjidic2_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kdic_OBJECTS = kdic.$(OBJEXT)
kdic_OBJECTS = $(am_kdic_OBJECTS)
kdic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_kingsoft_OBJECTS = kingsoft.$(OBJEXT)
kingsoft_OBJECTS = $(am_kingsoft_OBJECTS)
kingsoft_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_mova_OBJECTS = mova.$(OBJEXT)
mova_OBJECTS = $(am_mova_OBJECTS)
mova_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_olddic2newdic_OBJECTS = olddic2newdic.$(OBJEXT)
olddic2newdic_OBJECTS = $(am_olddic2newdic_OBJECTS)
olddic2newdic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_oxford2dic_OBJECTS = oxford2dic.$(OBJEXT)
oxford2dic_OBJECTS = $(am_oxford2dic_OBJECTS)
oxford2dic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_powerword_OBJECTS = powerword.$(OBJEXT)
powerword_OBJECTS = $(am_powerword_OBJECTS)
powerword_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_pydict2dic_OBJECTS = pydict2dic.$(OBJEXT)
pydict2dic_OBJECTS = $(am_pydict2dic_OBJECTS)
pydict2dic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_rucn_OBJECTS = rucn.$(OBJEXT)
rucn_OBJECTS = $(am_rucn_OBJECTS)
rucn_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_soothill_OBJECTS = soothill.$(OBJEXT)
soothill_OBJECTS = $(am_soothill_OBJECTS)
soothill_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_stardict_editor_OBJECTS = stardict-editor.$(OBJEXT) \
	libtabfile.$(OBJEXT) libcommon.$(OBJEXT) \
	libbabylonfile.$(OBJEXT) libstardict2txt.$(OBJEXT) \
	libstardictverify.$(OBJEXT)
stardict_editor_OBJECTS = $(am_stardict_editor_OBJECTS)
stardict_editor_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_stardict2txt_OBJECTS = stardict2txt.$(OBJEXT) \
	libstardict2txt.$(OBJEXT) libcommon.$(OBJEXT)
stardict2txt_OBJECTS = $(am_stardict2txt_OBJECTS)
stardict2txt_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_stardict_dict_update_OBJECTS = stardict_dict_update.$(OBJEXT)
stardict_dict_update_OBJECTS = $(am_stardict_dict_update_OBJECTS)
stardict_dict_update_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_stardict_verify_OBJECTS = stardict_verify.$(OBJEXT) \
	libstardictverify.$(OBJEXT) libcommon.$(OBJEXT)
stardict_verify_OBJECTS = $(am_stardict_verify_OBJECTS)
stardict_verify_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_tabfile_OBJECTS = tabfile.$(OBJEXT) libtabfile.$(OBJEXT) \
	libcommon.$(OBJEXT)
tabfile_OBJECTS = $(am_tabfile_OBJECTS)
tabfile_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_treedict2dir_OBJECTS = treedict2dir.$(OBJEXT)
treedict2dir_OBJECTS = $(am_treedict2dir_OBJECTS)
treedict2dir_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_wikipedia_OBJECTS = wikipedia.$(OBJEXT)
wikipedia_OBJECTS = $(am_wikipedia_OBJECTS)
wikipedia_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_wquick2dic_OBJECTS = wquick2dic.$(OBJEXT)
wquick2dic_OBJECTS = $(am_wquick2dic_OBJECTS)
wquick2dic_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_xmlinout_OBJECTS = xmlinout.$(OBJEXT)
xmlinout_OBJECTS = $(am_xmlinout_OBJECTS)
xmlinout_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(21shiji_SOURCES) $(21tech_SOURCES) $(babylon_SOURCES) \
	$(buddhist_SOURCES) $(cedict_SOURCES) $(degb2utf_SOURCES) \
	$(dictd2dic_SOURCES) $(directory2dic_SOURCES) \
	$(directory2treedic_SOURCES) $(dsl2dict_SOURCES) \
	$(duden_SOURCES) $(ec50_SOURCES) $(edict_SOURCES) \
	$(frgb2utf_SOURCES) $(gmx2utf_SOURCES) $(jdictionary_SOURCES) \
	$(jpgb2utf_SOURCES) $(kanjidic2_SOURCES) $(kdic_SOURCES) \
	$(kingsoft_SOURCES) $(mova_SOURCES) $(olddic2newdic_SOURCES) \
	$(oxford2dic_SOURCES) $(powerword_SOURCES) \
	$(pydict2dic_SOURCES) $(rucn_SOURCES) $(soothill_SOURCES) \
	$(stardict_editor_SOURCES) $(stardict2txt_SOURCES) \
	$(stardict_dict_update_SOURCES) $(stardict_verify_SOURCES) \
	$(tabfile_SOURCES) $(treedict2dir_SOURCES) \
	$(wikipedia_SOURCES) $(wquick2dic_SOURCES) $(xmlinout_SOURCES)
DIST_SOURCES = $(21shiji_SOURCES) $(21tech_SOURCES) $(babylon_SOURCES) \
	$(buddhist_SOURCES) $(cedict_SOURCES) $(degb2utf_SOURCES) \
	$(dictd2dic_SOURCES) $(directory2dic_SOURCES) \
	$(directory2treedic_SOURCES) $(dsl2dict_SOURCES) \
	$(duden_SOURCES) $(ec50_SOURCES) $(edict_SOURCES) \
	$(frgb2utf_SOURCES) $(gmx2utf_SOURCES) $(jdictionary_SOURCES) \
	$(jpgb2utf_SOURCES) $(kanjidic2_SOURCES) $(kdic_SOURCES) \
	$(kingsoft_SOURCES) $(mova_SOURCES) $(olddic2newdic_SOURCES) \
	$(oxford2dic_SOURCES) $(powerword_SOURCES) \
	$(pydict2dic_SOURCES) $(rucn_SOURCES) $(soothill_SOURCES) \
	$(stardict_editor_SOURCES) $(stardict2txt_SOURCES) \
	$(stardict_dict_update_SOURCES) $(stardict_verify_SOURCES) \
	$(tabfile_SOURCES) $(treedict2dir_SOURCES) \
	$(wikipedia_SOURCES) $(wquick2dic_SOURCES) $(xmlinout_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.9
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = tar
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.9
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSL2DICT_CFLAGS = 
DSL2DICT_LIBS = -lpcre 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
F77 = 
FFLAGS = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = makeinfo
OBJEXT = o
PACKAGE = stardict-tools
PACKAGE_BUGREPORT = http://stardict.sourceforge.net
PACKAGE_NAME = stardict-tools
PACKAGE_STRING = stardict-tools 2.4.8
PACKAGE_TARNAME = stardict-tools
PACKAGE_VERSION = 2.4.8
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STARDICT_CFLAGS = -Wall -pthread -I/usr/include/gtk-2.0 -I/usr/lib64/gtk-2.0/include -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/libdrm -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 
STARDICT_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -lpangocairo-1.0 -latk-1.0 -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lfontconfig -lfreetype 
STRIP = strip
VERSION = 2.4.8
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
ac_pt_PKG_CONFIG = /usr/bin/pkg-config
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = #
am__fastdepCXX_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-redhat-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = redhat
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = x86_64-redhat-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = redhat
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /home/fed/PycharmProjects/tutorial/untitled/Untitled Folder/stardict-tools-2.4.8/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 
SUBDIRS = 
INCLUDES = $(STARDICT_CFLAGS)
pydict2dic_LDFLAGS = 
pydict2dic_LDADD = $(STARDICT_LIBS)
pydict2dic_SOURCES = pydict2dic.c
olddic2newdic_LDFLAGS = 
olddic2newdic_LDADD = $(STARDICT_LIBS)
olddic2newdic_SOURCES = olddic2newdic.cpp
oxford2dic_LDFLAGS = 
oxford2dic_LDADD = $(STARDICT_LIBS)			
oxford2dic_SOURCES = oxford2dic.cpp
directory2dic_LDFLAGS = 
directory2dic_LDADD = $(STARDICT_LIBS)			
directory2dic_SOURCES = directory2dic.cpp
dictd2dic_LDFLAGS = 
dictd2dic_LDADD = $(STARDICT_LIBS)
dictd2dic_SOURCES = dictd2dic.cpp
wquick2dic_LDFLAGS = 
wquick2dic_LDADD = $(STARDICT_LIBS)
wquick2dic_SOURCES = wquick2dic.cpp
ec50_LDFLAGS = 
ec50_LDADD = $(STARDICT_LIBS)
ec50_SOURCES = ec50.cpp
directory2treedic_LDFLAGS = 
directory2treedic_LDADD = $(STARDICT_LIBS)
directory2treedic_SOURCES = directory2treedic.cpp
treedict2dir_LDFLAGS = 
treedict2dir_LDADD = $(STARDICT_LIBS)
treedict2dir_SOURCES = treedict2dir.cpp
jdictionary_LDFLAGS = 
jdictionary_LDADD = $(STARDICT_LIBS)			
jdictionary_SOURCES = jdictionary.cpp
mova_LDFLAGS = 
mova_LDADD = $(STARDICT_LIBS)			
mova_SOURCES = mova.cpp
xmlinout_LDFLAGS = 
xmlinout_LDADD = $(STARDICT_LIBS)
xmlinout_SOURCES = xmlinout.cpp
soothill_LDFLAGS = 
soothill_LDADD = $(STARDICT_LIBS)
soothill_SOURCES = soothill.cpp
kanjidic2_LDFLAGS = 
kanjidic2_LDADD = $(STARDICT_LIBS)
kanjidic2_SOURCES = kanjidic2.cpp
powerword_LDFLAGS = 
powerword_LDADD = $(STARDICT_LIBS)
powerword_SOURCES = powerword.cpp
kdic_LDFLAGS = 
kdic_LDADD = $(STARDICT_LIBS)
kdic_SOURCES = kdic.cpp
21tech_LDFLAGS = 
21tech_LDADD = $(STARDICT_LIBS)
21tech_SOURCES = 21tech.cpp
21shiji_LDFLAGS = 
21shiji_LDADD = $(STARDICT_LIBS)
21shiji_SOURCES = 21shiji.cpp
buddhist_LDFLAGS = 
buddhist_LDADD = $(STARDICT_LIBS)
buddhist_SOURCES = buddhist.cpp
tabfile_LDFLAGS = 
tabfile_LDADD = $(STARDICT_LIBS)
tabfile_SOURCES = tabfile.cpp libtabfile.cpp libtabfile.h libcommon.cpp libcommon.h
cedict_LDFLAGS = 
cedict_LDADD = $(STARDICT_LIBS)
cedict_SOURCES = cedict.cpp
edict_LDFLAGS = 
edict_LDADD = $(STARDICT_LIBS)
edict_SOURCES = edict.cpp
dsl2dict_LDFLAGS = 
dsl2dict_LDADD = $(STARDICT_LIBS) $(DSL2DICT_LIBS)
dsl2dict_SOURCES = dsl2dict.c
duden_LDFLAGS = 
duden_LDADD = $(STARDICT_LIBS)
duden_SOURCES = duden.cpp
degb2utf_LDFLAGS = 
degb2utf_LDADD = $(STARDICT_LIBS)
degb2utf_SOURCES = degb2utf.cpp
frgb2utf_LDFLAGS = 
frgb2utf_LDADD = $(STARDICT_LIBS)
frgb2utf_SOURCES = frgb2utf.cpp
jpgb2utf_LDFLAGS = 
jpgb2utf_LDADD = $(STARDICT_LIBS)
jpgb2utf_SOURCES = jpgb2utf.cpp
gmx2utf_LDFLAGS = 
gmx2utf_LDADD = $(STARDICT_LIBS)
gmx2utf_SOURCES = gmx2utf.cpp
rucn_LDFLAGS = 
rucn_LDADD = $(STARDICT_LIBS)
rucn_SOURCES = rucn.cpp
kingsoft_LDFLAGS = 
kingsoft_LDADD = $(STARDICT_LIBS)
kingsoft_SOURCES = kingsoft.cpp
wikipedia_LDFLAGS = 
wikipedia_LDADD = $(STARDICT_LIBS)
wikipedia_SOURCES = wikipedia.cpp
babylon_LDFLAGS = 
babylon_LDADD = $(STARDICT_LIBS)
babylon_SOURCES = babylon.cpp libbabylonfile.cpp libbabylonfile.h libcommon.cpp libcommon.h
stardict2txt_LDFLAGS = 
stardict2txt_LDADD = $(STARDICT_LIBS)
stardict2txt_SOURCES = stardict2txt.cpp libstardict2txt.cpp libstardict2txt.h libcommon.cpp libcommon.h
stardict_dict_update_LDFLAGS = 
stardict_dict_update_LDADD = $(STARDICT_LIBS)			
stardict_dict_update_SOURCES = stardict_dict_update.cpp
stardict_verify_LDFLAGS = 
stardict_verify_LDADD = $(STARDICT_LIBS)
stardict_verify_SOURCES = stardict_verify.cpp libstardictverify.cpp libstardictverify.h libcommon.cpp libcommon.h
stardict_editor_LDFLAGS = 
stardict_editor_LDADD = $(STARDICT_LIBS)
stardict_editor_SOURCES = stardict-editor.cpp libtabfile.cpp libtabfile.h libcommon.cpp libcommon.h libbabylonfile.cpp libbabylonfile.h libstardict2txt.cpp libstardict2txt.h libstardictverify.cpp libstardictverify.h
EXTRA_DIST = example.ifo example_treedict.tar.bz2 hanzim2dict.py jm2stardict.py uyghur2dict.py ncce2stardict.pl parse-oxford.perl dictgen.php DeKDic.exe KSDrip.exe
all: all-recursive

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
21shiji$(EXEEXT): $(21shiji_OBJECTS) $(21shiji_DEPENDENCIES) 
	@rm -f 21shiji$(EXEEXT)
	$(CXXLINK) $(21shiji_LDFLAGS) $(21shiji_OBJECTS) $(21shiji_LDADD) $(LIBS)
21tech$(EXEEXT): $(21tech_OBJECTS) $(21tech_DEPENDENCIES) 
	@rm -f 21tech$(EXEEXT)
	$(CXXLINK) $(21tech_LDFLAGS) $(21tech_OBJECTS) $(21tech_LDADD) $(LIBS)
babylon$(EXEEXT): $(babylon_OBJECTS) $(babylon_DEPENDENCIES) 
	@rm -f babylon$(EXEEXT)
	$(CXXLINK) $(babylon_LDFLAGS) $(babylon_OBJECTS) $(babylon_LDADD) $(LIBS)
buddhist$(EXEEXT): $(buddhist_OBJECTS) $(buddhist_DEPENDENCIES) 
	@rm -f buddhist$(EXEEXT)
	$(CXXLINK) $(buddhist_LDFLAGS) $(buddhist_OBJECTS) $(buddhist_LDADD) $(LIBS)
cedict$(EXEEXT): $(cedict_OBJECTS) $(cedict_DEPENDENCIES) 
	@rm -f cedict$(EXEEXT)
	$(CXXLINK) $(cedict_LDFLAGS) $(cedict_OBJECTS) $(cedict_LDADD) $(LIBS)
degb2utf$(EXEEXT): $(degb2utf_OBJECTS) $(degb2utf_DEPENDENCIES) 
	@rm -f degb2utf$(EXEEXT)
	$(CXXLINK) $(degb2utf_LDFLAGS) $(degb2utf_OBJECTS) $(degb2utf_LDADD) $(LIBS)
dictd2dic$(EXEEXT): $(dictd2dic_OBJECTS) $(dictd2dic_DEPENDENCIES) 
	@rm -f dictd2dic$(EXEEXT)
	$(CXXLINK) $(dictd2dic_LDFLAGS) $(dictd2dic_OBJECTS) $(dictd2dic_LDADD) $(LIBS)
directory2dic$(EXEEXT): $(directory2dic_OBJECTS) $(directory2dic_DEPENDENCIES) 
	@rm -f directory2dic$(EXEEXT)
	$(CXXLINK) $(directory2dic_LDFLAGS) $(directory2dic_OBJECTS) $(directory2dic_LDADD) $(LIBS)
directory2treedic$(EXEEXT): $(directory2treedic_OBJECTS) $(directory2treedic_DEPENDENCIES) 
	@rm -f directory2treedic$(EXEEXT)
	$(CXXLINK) $(directory2treedic_LDFLAGS) $(directory2treedic_OBJECTS) $(directory2treedic_LDADD) $(LIBS)
dsl2dict$(EXEEXT): $(dsl2dict_OBJECTS) $(dsl2dict_DEPENDENCIES) 
	@rm -f dsl2dict$(EXEEXT)
	$(LINK) $(dsl2dict_LDFLAGS) $(dsl2dict_OBJECTS) $(dsl2dict_LDADD) $(LIBS)
duden$(EXEEXT): $(duden_OBJECTS) $(duden_DEPENDENCIES) 
	@rm -f duden$(EXEEXT)
	$(CXXLINK) $(duden_LDFLAGS) $(duden_OBJECTS) $(duden_LDADD) $(LIBS)
ec50$(EXEEXT): $(ec50_OBJECTS) $(ec50_DEPENDENCIES) 
	@rm -f ec50$(EXEEXT)
	$(CXXLINK) $(ec50_LDFLAGS) $(ec50_OBJECTS) $(ec50_LDADD) $(LIBS)
edict$(EXEEXT): $(edict_OBJECTS) $(edict_DEPENDENCIES) 
	@rm -f edict$(EXEEXT)
	$(CXXLINK) $(edict_LDFLAGS) $(edict_OBJECTS) $(edict_LDADD) $(LIBS)
frgb2utf$(EXEEXT): $(frgb2utf_OBJECTS) $(frgb2utf_DEPENDENCIES) 
	@rm -f frgb2utf$(EXEEXT)
	$(CXXLINK) $(frgb2utf_LDFLAGS) $(frgb2utf_OBJECTS) $(frgb2utf_LDADD) $(LIBS)
gmx2utf$(EXEEXT): $(gmx2utf_OBJECTS) $(gmx2utf_DEPENDENCIES) 
	@rm -f gmx2utf$(EXEEXT)
	$(CXXLINK) $(gmx2utf_LDFLAGS) $(gmx2utf_OBJECTS) $(gmx2utf_LDADD) $(LIBS)
jdictionary$(EXEEXT): $(jdictionary_OBJECTS) $(jdictionary_DEPENDENCIES) 
	@rm -f jdictionary$(EXEEXT)
	$(CXXLINK) $(jdictionary_LDFLAGS) $(jdictionary_OBJECTS) $(jdictionary_LDADD) $(LIBS)
jpgb2utf$(EXEEXT): $(jpgb2utf_OBJECTS) $(jpgb2utf_DEPENDENCIES) 
	@rm -f jpgb2utf$(EXEEXT)
	$(CXXLINK) $(jpgb2utf_LDFLAGS) $(jpgb2utf_OBJECTS) $(jpgb2utf_LDADD) $(LIBS)
kanjidic2$(EXEEXT): $(kanjidic2_OBJECTS) $(kanjidic2_DEPENDENCIES) 
	@rm -f kanjidic2$(EXEEXT)
	$(CXXLINK) $(kanjidic2_LDFLAGS) $(kanjidic2_OBJECTS) $(kanjidic2_LDADD) $(LIBS)
kdic$(EXEEXT): $(kdic_OBJECTS) $(kdic_DEPENDENCIES) 
	@rm -f kdic$(EXEEXT)
	$(CXXLINK) $(kdic_LDFLAGS) $(kdic_OBJECTS) $(kdic_LDADD) $(LIBS)
kingsoft$(EXEEXT): $(kingsoft_OBJECTS) $(kingsoft_DEPENDENCIES) 
	@rm -f kingsoft$(EXEEXT)
	$(CXXLINK) $(kingsoft_LDFLAGS) $(kingsoft_OBJECTS) $(kingsoft_LDADD) $(LIBS)
mova$(EXEEXT): $(mova_OBJECTS) $(mova_DEPENDENCIES) 
	@rm -f mova$(EXEEXT)
	$(CXXLINK) $(mova_LDFLAGS) $(mova_OBJECTS) $(mova_LDADD) $(LIBS)
olddic2newdic$(EXEEXT): $(olddic2newdic_OBJECTS) $(olddic2newdic_DEPENDENCIES) 
	@rm -f olddic2newdic$(EXEEXT)
	$(CXXLINK) $(olddic2newdic_LDFLAGS) $(olddic2newdic_OBJECTS) $(olddic2newdic_LDADD) $(LIBS)
oxford2dic$(EXEEXT): $(oxford2dic_OBJECTS) $(oxford2dic_DEPENDENCIES) 
	@rm -f oxford2dic$(EXEEXT)
	$(CXXLINK) $(oxford2dic_LDFLAGS) $(oxford2dic_OBJECTS) $(oxford2dic_LDADD) $(LIBS)
powerword$(EXEEXT): $(powerword_OBJECTS) $(powerword_DEPENDENCIES) 
	@rm -f powerword$(EXEEXT)
	$(CXXLINK) $(powerword_LDFLAGS) $(powerword_OBJECTS) $(powerword_LDADD) $(LIBS)
pydict2dic$(EXEEXT): $(pydict2dic_OBJECTS) $(pydict2dic_DEPENDENCIES) 
	@rm -f pydict2dic$(EXEEXT)
	$(LINK) $(pydict2dic_LDFLAGS) $(pydict2dic_OBJECTS) $(pydict2dic_LDADD) $(LIBS)
rucn$(EXEEXT): $(rucn_OBJECTS) $(rucn_DEPENDENCIES) 
	@rm -f rucn$(EXEEXT)
	$(CXXLINK) $(rucn_LDFLAGS) $(rucn_OBJECTS) $(rucn_LDADD) $(LIBS)
soothill$(EXEEXT): $(soothill_OBJECTS) $(soothill_DEPENDENCIES) 
	@rm -f soothill$(EXEEXT)
	$(CXXLINK) $(soothill_LDFLAGS) $(soothill_OBJECTS) $(soothill_LDADD) $(LIBS)
stardict-editor$(EXEEXT): $(stardict_editor_OBJECTS) $(stardict_editor_DEPENDENCIES) 
	@rm -f stardict-editor$(EXEEXT)
	$(CXXLINK) $(stardict_editor_LDFLAGS) $(stardict_editor_OBJECTS) $(stardict_editor_LDADD) $(LIBS)
stardict2txt$(EXEEXT): $(stardict2txt_OBJECTS) $(stardict2txt_DEPENDENCIES) 
	@rm -f stardict2txt$(EXEEXT)
	$(CXXLINK) $(stardict2txt_LDFLAGS) $(stardict2txt_OBJECTS) $(stardict2txt_LDADD) $(LIBS)
stardict_dict_update$(EXEEXT): $(stardict_dict_update_OBJECTS) $(stardict_dict_update_DEPENDENCIES) 
	@rm -f stardict_dict_update$(EXEEXT)
	$(CXXLINK) $(stardict_dict_update_LDFLAGS) $(stardict_dict_update_OBJECTS) $(stardict_dict_update_LDADD) $(LIBS)
stardict_verify$(EXEEXT): $(stardict_verify_OBJECTS) $(stardict_verify_DEPENDENCIES) 
	@rm -f stardict_verify$(EXEEXT)
	$(CXXLINK) $(stardict_verify_LDFLAGS) $(stardict_verify_OBJECTS) $(stardict_verify_LDADD) $(LIBS)
tabfile$(EXEEXT): $(tabfile_OBJECTS) $(tabfile_DEPENDENCIES) 
	@rm -f tabfile$(EXEEXT)
	$(CXXLINK) $(tabfile_LDFLAGS) $(tabfile_OBJECTS) $(tabfile_LDADD) $(LIBS)
treedict2dir$(EXEEXT): $(treedict2dir_OBJECTS) $(treedict2dir_DEPENDENCIES) 
	@rm -f treedict2dir$(EXEEXT)
	$(CXXLINK) $(treedict2dir_LDFLAGS) $(treedict2dir_OBJECTS) $(treedict2dir_LDADD) $(LIBS)
wikipedia$(EXEEXT): $(wikipedia_OBJECTS) $(wikipedia_DEPENDENCIES) 
	@rm -f wikipedia$(EXEEXT)
	$(CXXLINK) $(wikipedia_LDFLAGS) $(wikipedia_OBJECTS) $(wikipedia_LDADD) $(LIBS)
wquick2dic$(EXEEXT): $(wquick2dic_OBJECTS) $(wquick2dic_DEPENDENCIES) 
	@rm -f wquick2dic$(EXEEXT)
	$(CXXLINK) $(wquick2dic_LDFLAGS) $(wquick2dic_OBJECTS) $(wquick2dic_LDADD) $(LIBS)
xmlinout$(EXEEXT): $(xmlinout_OBJECTS) $(xmlinout_DEPENDENCIES) 
	@rm -f xmlinout$(EXEEXT)
	$(CXXLINK) $(xmlinout_LDFLAGS) $(xmlinout_OBJECTS) $(xmlinout_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/21shiji.Po
include ./$(DEPDIR)/21tech.Po
include ./$(DEPDIR)/babylon.Po
include ./$(DEPDIR)/buddhist.Po
include ./$(DEPDIR)/cedict.Po
include ./$(DEPDIR)/degb2utf.Po
include ./$(DEPDIR)/dictd2dic.Po
include ./$(DEPDIR)/directory2dic.Po
include ./$(DEPDIR)/directory2treedic.Po
include ./$(DEPDIR)/dsl2dict.Po
include ./$(DEPDIR)/duden.Po
include ./$(DEPDIR)/ec50.Po
include ./$(DEPDIR)/edict.Po
include ./$(DEPDIR)/frgb2utf.Po
include ./$(DEPDIR)/gmx2utf.Po
include ./$(DEPDIR)/jdictionary.Po
include ./$(DEPDIR)/jpgb2utf.Po
include ./$(DEPDIR)/kanjidic2.Po
include ./$(DEPDIR)/kdic.Po
include ./$(DEPDIR)/kingsoft.Po
include ./$(DEPDIR)/libbabylonfile.Po
include ./$(DEPDIR)/libcommon.Po
include ./$(DEPDIR)/libstardict2txt.Po
include ./$(DEPDIR)/libstardictverify.Po
include ./$(DEPDIR)/libtabfile.Po
include ./$(DEPDIR)/mova.Po
include ./$(DEPDIR)/olddic2newdic.Po
include ./$(DEPDIR)/oxford2dic.Po
include ./$(DEPDIR)/powerword.Po
include ./$(DEPDIR)/pydict2dic.Po
include ./$(DEPDIR)/rucn.Po
include ./$(DEPDIR)/soothill.Po
include ./$(DEPDIR)/stardict-editor.Po
include ./$(DEPDIR)/stardict2txt.Po
include ./$(DEPDIR)/stardict_dict_update.Po
include ./$(DEPDIR)/stardict_verify.Po
include ./$(DEPDIR)/tabfile.Po
include ./$(DEPDIR)/treedict2dir.Po
include ./$(DEPDIR)/wikipedia.Po
include ./$(DEPDIR)/wquick2dic.Po
include ./$(DEPDIR)/xmlinout.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS clean-recursive ctags ctags-recursive \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-recursive distclean-tags distdir \
	dvi dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	maintainer-clean-recursive mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool mostlyclean-recursive \
	pdf pdf-am ps ps-am tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
